#+OPTIONS: toc:nil
# #+LaTeX_CLASS: koma-article 

#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=169]
#+OPTIONS: H:2
# #+BEAMER_THEME: Madrid
#+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col) %8BEAMER_OPT(Opt)
     
#+LaTex_HEADER: \usepackage{khpreamble, euscript}
#+LaTex_HEADER: \DeclareMathOperator{\atantwo}{atan2}
#+LaTex_HEADER: \newcommand*{\ctrb}{\EuScript{C}}
#+LaTex_HEADER: \newcommand*{\obsv}{\EuScript{O}}

#+title:  El modelo canónico de robots móviles no-holonómicos
# #+date: 2018-04-05

* What do I want the students to understand?			   :noexport:
- The dynamics of the unicycle model

* Activities                                                       :noexport:
- Program function that takes linear and angular velocity in SI measurements as input  and
  computes the velocity of each wheel.
- Implement open-loop control to move roverbot in square.
  

* Mobile robots

** El concepto de /estado/

#+BEAMER: \pause

#+begin_quote
El conjunto de información sobre el pasado del sistema necesario para predicir el comportamiento del sistema en el futuro (dado todas las señales de entrada)
#+end_quote

** Modelo canónico a.k.a modelo uniciclo
    \begin{center}
     \includegraphics[width=.6\linewidth]{../figures/unicycle-kth.png}
    \end{center}

    \footnotesize
    De Martina Zambelli (2013) /Posture regulation for unicycle-like robots with prescribed performance guarantees/. KTH - Royal Institute of Technology, Sweden.


* Differential drive

** Robot tipo diferencial (/differential drive/)
    \begin{center}
     \includegraphics[width=.5\linewidth]{../figures/X80Pro.jpg}
    \end{center}

    X80Pro Dr. Robot Inc.
    
** Robot móvil - modelo uniciclo
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
     \includegraphics[width=.3\linewidth]{../figures/X80Pro.jpg}
    \end{center}
    \begin{center}
     \includegraphics[width=1.0\linewidth]{../figures/unicycle-model}
    \end{center}

*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:

#+BEAMER: \pause

*Cinemática*

    \[ \xi = \begin{bmatrix} \theta\\x\\y \end{bmatrix},   \quad u = \begin{bmatrix} \omega\\v \end{bmatrix}\]



    \[\frac{d}{dt} \xi = \begin{bmatrix} \dot{\theta}\\\dot{x}\\\dot{y} \end{bmatrix} = \begin{bmatrix} \omega\\ v\cos\theta\\v\sin\theta\end{bmatrix} \]

    
# #+BEAMER: \pause

# *Actividad* En simulink

*** Notes                                                          :noexport:
- Add three integrators, label
- Add XY-scope and regular scope
- Link x and y to XY-scope, link theta to other scope
- Add two sources for the control inputs \omega and v.
- Leave the rest to the students.
- Goal: Make robot move in circular of radius 2m, finishing the revolution in 10s
  - Angular vel: \omega = 2*pi/10
  - Linear vel: 2*pi*r/10



** Diferencial a modelo uniciclo
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../figures/unicycle-model-details}
    \end{center}

*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:


#+BEAMER: \pause

*Actividad* Determine

1) La velocidad lineal ($v_R$, $v_L$) de cada rueda dado su velocidad angular ($\omega_R$, $\omega_L$)

2) La velocidad lineal $v$ del centro robot dado las dos velocidades $v_R$ y $v_L$

3) La velocidad angular $\omega$ del robot dado las dos velocidades $v_R$ y $v_L$

4) Las relaciones invertidas. Es decir, las velocidades angulares $\omega_R$ y $\omega_L$ de los ruedos dado las velocidades $v$ y $\omega$.

   
** Diferencial a modelo uniciclo
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
     \includegraphics[width=.8\linewidth]{../figures/unicycle-model-details}
    \end{center}

*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:


Asumiendo simetría entre las dos ruedas y en la dirección de giro.

\[ \omega_L,\, \omega_R \; \in \; [-\omega_{max}, \omega_{max}]\]

#+BEAMER: \pause

*Actividad*
Dibuje la región de posibles valores de la señal de entrada al modelo canónico,
\[ u(t) = \begin{bmatrix} \omega(t)\\v(t) \end{bmatrix}, \]
dado los límites de la velocidad angular de las ruedas.


** Implementación

Notebook en google colab (página en Canvas)


* Car-like

** Robots tipo coche - modelo bicicleta
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
     \includegraphics[width=1.05\linewidth]{../figures/bicycle-model}
    \end{center}

*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:

#+BEAMER: \pause

Para un robot que se mueve instantaneamente en una trayectoria círcular con radie $R$, la relación entre la velocidad lineal $v$ y la velocidad angular $\omega$ es

#+BEAMER: \pause

\[ v = R\omega \quad \Rightleftarrow \quad \omega = \frac{1}{R} v \]

#+BEAMER: \pause
*Actividad* Determine el radie de giro instantaneo $R$ como función del ángulo de dirección $\phi$.

#+BEAMER: \pause
*Actividad* Determine la velocidad angular $\omega$ como función de la velocidad $v$ y del ángulo de dirección $\phi$. Determine también la función inversa.




** Robots tipo coche - modelo bicicleta
*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
     \includegraphics[width=1.05\linewidth]{../figures/bicycle-model}
    \end{center}

*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:

Para cierto robot
\[ v \in [-v_{lm}, v_{um}], \quad \phi \in [-\phi_{max}, \phi_{max}]\]


#+BEAMER: \pause

*Actividad* Dibuje la región de posibles valores de la señal de entrada al modelo canónico,
\[ u(t) = \begin{bmatrix} \omega(t)\\v(t) \end{bmatrix}, \]
dado los límites de la velocidad $v$ y del ángulo de dirección $\phi$.


** Implementación

Notebook en google colab (página en Canvas)


* Control en lazo abierto                                          :noexport:

** Control en lazo abierto

*** Graphics
:PROPERTIES:
:BEAMER_col: 0.4
:END:

    \begin{center}
     \includegraphics[width=1.0\linewidth]{../figures/unicycle-model}
    \end{center}

*** Text
:PROPERTIES:
:BEAMER_col: 0.6
:END:

#+BEAMER: \pause

Queremos manejar el robot de un estado inicial a otro estando. Es decir eligir una señal de entrada
$$ u(t) = \begin{bmatrix} v(t)\\\omega_t \end{bmatrix}, \; t \in [0,\, t_1) $$
que mueve el robot de una posición y orientación inicial ($x(0)$, $y(0)$, $\theta(0)$) a otra posición y orientación en $t_1$ segundos.

#+BEAMER: \pause

*Actividad*

Dibuje la señal de entrada que 
1) mueve el robot una distancia 1m derecho en 3 segundos.
2) cambia la dirección del robot 90 grados hacia izquierda.
3) que mueve el robot en una trayectoria de forma cuadrada con lados de 1 metros en 20 segundos.

** Implementación del control en lazo abierto

Simulink









